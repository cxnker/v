local Players, RunService, ReplicatedStorage, StarterGui, UIS = game:GetService("Players"), game:GetService("RunService"), game:GetService("ReplicatedStorage"), game:GetService("StarterGui"), game:GetService("UserInputService")
local LocalPlayer = Players.LocalPlayer
local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
local Humanoid, RootPart = Character:WaitForChild("Humanoid"), Character:WaitForChild("HumanoidRootPart")
local RE = ReplicatedStorage:WaitForChild("RE")

local WindUI = loadstring(game:HttpGet("https://github.com/Footagesus/WindUI/releases/latest/download/main.lua"))()
local Window = WindUI:CreateWindow({
    Title = "Hexagon Client üÉè",
    Icon = "rbxassetid://103422693243379",
    Author = "by Nova ¬∑ v1.0.0",
    Size = UDim2.fromOffset(600, 480),
    Transparent = true,
    Theme = "Dark",
    Resizable = true,
})

WindUI:Notify({
    Title = "Welcome to Hexagon Client",
    Content = "Created by @Roun95",
    Duration = 10,
    Icon = "rbxassetid://103422693243379",
})

local function newNotification(title, message, icon, duration)
    StarterGui:SetCore("SendNotification",{
        Title = title,
        Text = message,
		Icon = icon or "",
        Duration = duration or 5
    })
end

local InfoTab = Window:Tab({
    Title = "Info",
    Icon = "info",
    Locked = false,
})
local PlayerTab = Window:Tab({
    Title = "Player",
    Icon = "user",
    Locked = false,
})
local AvatarTab = Window:Tab({
    Title = "Avatar",
    Icon = "tag",
    Locked = false,
})
local ProfileTab = Window:Tab({
    Title = "Profile",
    Icon = "pencil",
    Locked = false,
})
local MusicTab = Window:Tab({
    Title = "Music",
    Icon = "music",
    Locked = false,
})
local TrollTab = Window:Tab({
    Title = "Troll",
    Icon = "ghost",
    Locked = false,
})
local ScriptsTab = Window:Tab({
    Title = "Scripts",
    Icon = "scroll",
    Locked = false,
})
local AdminTab = Window:Tab({
    Title = "Admin",
    Icon = "crown",
    Locked = false,
})
local TeleportTab = Window:Tab({
    Title = "Teleport",
    Icon = "pin",
    Locked = false,
})
local ProtectionTab = Window:Tab({
    Title = "Protection",
    Icon = "shield",
    Locked = false,
})
-- ==============================
-- INFO
-- ==============================

InfoTab:Section({Title = "Info", Icon = "info"})

-- ==============================
-- PLAYER
-- ==============================

PlayerTab:Section({Title = "Player", Icon = "user"})

-- ==============================
-- AVATAR
-- ==============================

local Remotes = ReplicatedStorage.Remotes
local Wear, ChangeCharacterBody = Remotes.Wear, Remotes.ChangeCharacterBody

AvatarTab:Section({Title = "Copy Avatar", Icon = "tag"})

local PlayerValue
local Target = nil

local function getPlayerNames()
    local playerNames = {}
    for _, player in ipairs(Players:GetPlayers()) do
        if player.Name ~= LocalPlayer.Name then
            table.insert(playerNames, player.Name)
        end
    end
    return playerNames
end

local updateList = AvatarTab:Dropdown({
    Title = "Select Player",
    Values = getPlayerNames(),
    Callback = function(playername)
        PlayerValue = playername
        Target = playername
    end
})

local function updatePlayers()
    updateList:Refresh(getPlayerNames())
end

AvatarTab:Button({
    Title = "Update List",
    Callback = function()
    updatePlayers()
end})

Players.PlayerAdded:Connect(updatePlayers)
Players.PlayerRemoving:Connect(updatePlayers)

AvatarTab:Button({
    Title = "Copy Avatar",
    Callback = function()
        if not Target then return end

        local LChar = LocalPlayer.Character
        local TPlayer = Players:FindFirstChild(Target)

        if TPlayer and TPlayer.Character then
            local LHumanoid = LChar and LChar:FindFirstChildOfClass("Humanoid")
            local THumanoid = TPlayer.Character:FindFirstChildOfClass("Humanoid")
            if LHumanoid and THumanoid then
                local LDesc = LHumanoid:GetAppliedDescription()
                for _, acc in ipairs(LDesc:GetAccessories(true)) do
                    if acc.AssetId and tonumber(acc.AssetId) then
                        Wear:InvokeServer(tonumber(acc.AssetId))
                        task.wait(0.2)
                    end
                end
                if tonumber(LDesc.Shirt) then
                    Wear:InvokeServer(tonumber(LDesc.Shirt))
                    task.wait(0.2)
                end
                if tonumber(LDesc.Pants) then
                    Wear:InvokeServer(tonumber(LDesc.Pants))
                    task.wait(0.2)
                end
                if tonumber(LDesc.Face) then
                    Wear:InvokeServer(tonumber(LDesc.Face))
                    task.wait(0.2)
                end
                local PDesc = THumanoid:GetAppliedDescription()
                local argsBody = {
                    [1] = {
                        [1] = PDesc.Torso,
                        [2] = PDesc.RightArm,
                        [3] = PDesc.LeftArm,
                        [4] = PDesc.RightLeg,
                        [5] = PDesc.LeftLeg,
                        [6] = PDesc.Head
                    }
                }
                ChangeCharacterBody:InvokeServer(unpack(argsBody))
                task.wait(0.5)
                if tonumber(PDesc.Shirt) then
                    Wear:InvokeServer(tonumber(PDesc.Shirt))
                    task.wait(0.3)
                end
                if tonumber(PDesc.Pants) then
                    Wear:InvokeServer(tonumber(PDesc.Pants))
                    task.wait(0.3)
                end
                if tonumber(PDesc.Face) then
                    Wear:InvokeServer(tonumber(PDesc.Face))
                    task.wait(0.3)
                end
                for _, v in ipairs(PDesc:GetAccessories(true)) do
                    if v.AssetId and tonumber(v.AssetId) then
                        Wear:InvokeServer(tonumber(v.AssetId))
                        task.wait(0.3)
                    end
                end
                local SkinColor = TPlayer.Character:FindFirstChild("Body Colors")
                if SkinColor then
                    Remotes.ChangeBodyColor:FireServer(tostring(SkinColor.HeadColor))
                    task.wait(0.3)
                end
            end
        end
	end
})

AvatarTab:Section({Title = "3D Clothes", Icon = "tag"})

local function equipClothes(clothesID, clothesName)
    local args = { clothesID }
    local success = pcall(function()
        return Wear:InvokeServer(unpack(args))
    end)
    if success then
        print("Clothes " .. clothesName .. " Equipped with success")
    else
        print("Failed to equip " .. clothesName)
    end
end

AvatarTab:Button({
    Title = "Black Arm Bandages 1.0",
    Desc = "TYPE: Shirt üëï",
    Locked = false,
    Callback = function()
        equipClothes(11458078735, "Black-Arm-Bandages-1-0")
    end
})

AvatarTab:Button({
    Title = "Black Oversized Warmers",
    Desc = "TYPE: Sweater üëï",
    Locked = false,
    Callback = function()
        equipClothes(10789914680, "Black-Oversized-Warmers")
    end
})

AvatarTab:Button({
    Title = "Black Oversized Off Shoulder Hoodie",
    Desc = "TYPE: Sweater üëï",
    Locked = false,
    Callback = function()
        equipClothes(18396592827, "Black-Oversized-Off-Shoulder-Hoodie")
    end
})

AvatarTab:Button({
    Title = "White Oversized Off Shoulder Hoodie",
    Desc = "TYPE: Sweater üëï",
    Locked = false,
    Callback = function()
        equipClothes(18396754379, "White-Oversized-Off-Shoulder-Hoodie")
    end
})

AvatarTab:Button({
    Title = "Left Leg Spikes",
    Desc = "TYPE: Pants üëñ",
    Locked = false,
    Callback = function()
        equipClothes(10814325667, "Left-Leg-Spikes")
    end
})

AvatarTab:Section({Title = "Character Editor", Icon = "tag"})

AvatarTab:Button({
    Title = "(Mini Plushie) and Headless",
    Desc = "TYPE: Body ‚úèÔ∏è",
    Locked = false,
    Callback = function()
	ChangeCharacterBody:InvokeServer({
		[1] = 112722466960512, -- Torso
		[2] = 76079756909323, -- Right Arm
		[3] = 82598238110471, -- Left Arm
		[4] = 107431241133468, -- Right Leg
		[5] = 103380121023771, -- Left Leg
		[6] = 134082579, -- Head
	})
	end
})

-- ==============================
-- PROFILE
-- ==============================

ProfileTab:Section({Title = "Names", Icon = "pencil"})

local names = {
    {"Ôº®Ôº•Ôº∏Ôº°ÔºßÔºØÔºÆ Ôº®ÔºµÔº¢::", " Ôº®Ôº•Ôº∏Ôº°ÔºßÔºØÔºÆ Ôº®ÔºµÔº¢:: "},
    {"Ôº™ÔºØÔº´Ôº•Ôº≤", " Ôº™ÔºØÔº´Ôº•Ôº≤ "},
    {"Ôº°Ôº§Ôº≠Ôº©ÔºÆ", " Ôº°Ôº§Ôº≠Ôº©ÔºÆ "},
    {"Ôº§Ôº•Ôº∂", " Ôº§Ôº•Ôº∂ "},
    {"Ôº£ÔºØÔºêÔº¨Ôº´Ôº©Ôº§", " Ôº£ÔºØÔºêÔº¨Ôº´Ôº©Ôº§ "},
    {"Ôº¥ÔºµÔº¢Ôº•Ôº≤Ôº≥ÔºôÔºì", " Ôº¥ÔºµÔº¢Ôº•Ôº≤Ôº≥ÔºôÔºì "},
}

for _, nm in ipairs(names) do
    ProfileTab:Button({
        Title = "Name: " .. nm[1],
        Callback = function()
            RE["1RPNam1eTex1t"]:FireServer("RolePlayName", nm[2])
        end
    })
end

-- ==============================
-- MUSIC
-- ==============================

MusicTab:Section({Title = "Music", Icon = "music"})

-- ==============================
-- TROLL
-- ==============================

TrollTab:Section({Title = "House", Icon = "ghost"})

TrollTab:Button({
    Title = "Unban all houses",
    Callback = function()
        local successCount = 0
        local failCount = 0
        for i = 1, 37 do
            local bannedBlockName = "BannedBlock" .. i
            local bannedBlock = Workspace:FindFirstChild(bannedBlockName, true)
            if bannedBlock then
                local success, _ = pcall(function()
                    bannedBlock:Destroy()
                end)
                if success then
                    successCount = successCount + 1
                else
                    failCount = failCount + 1
                end
            end
        end
        for _, house in pairs(Workspace:GetDescendants()) do
            if house.Name:match("BannedBlock") then
                local success, _ = pcall(function()
                    house:Destroy()
                end)
                if success then
                    successCount = successCount + 1
                else
                    failCount = failCount + 1
                end
            end
        end
        if successCount > 0 then
			newNotification("‚úÖ Success", "Unbanned from " .. successCount .. " houses")
        end
        if failCount > 0 then
			newNotification("‚ùå Failed", "Not unbanned from " .. failCount .. " houses")
        end
        if successCount == 0 and failCount == 0 then
			newNotification("‚ö†Ô∏è Warn", "Not banned houses find")
        end
    end
})

TrollTab:Button({
    Title = "Bring Parts",
	Desc = "GAME: Universal Script üìå, TYPE: Interface",
    Callback = function()
        loadstring(game:HttpGet("https://github.com/cxnker/v/raw/main/main/bringparts"))()
	end
})

TrollTab:Button({
    Title = "[M] Jerk Off R6/R15, TYPE: Tool",
	Desc = "GAME: Universal Script üìå",
    Callback = function()
        loadstring(game:HttpGet("https://github.com/cxnker/v/raw/main/main/jerk"))()
	end
})

-- ==============================
-- SCRIPTS
-- ==============================

ScriptsTab:Section({Title = "Scripts", Icon = "scroll"})

ScriptsTab:Button({
    Title = "Shaders RTX",
	Desc = "GAME: Brookhaven üè°RP, TYPE: Script",
    Callback = function()
        loadstring(game:HttpGet("https://github.com/cxnker/v/raw/main/main/shaders"))()
	end
})

ScriptsTab:Button({
    Title = "FPS Booster",
	Desc = "GAME: Universal Script üìå, TYPE: Script",
    Callback = function()
        loadstring(game:HttpGet("https://github.com/cxnker/v/raw/main/main/boostfps"))()
	end
})

ScriptsTab:Button({
    Title = "Fly Gui V3",
	Desc = "GAME: Universal Script üìå, TYPE: Interface",
    Callback = function()
        loadstring(game:HttpGet("https://github.com/nxvap/source/raw/main/fly"))()
	end
})

ScriptsTab:Button({
    Title = "VFly Gui",
	Desc = "GAME: Universal Script üìå, TYPE: Interface",
    Callback = function()
        loadstring(game:HttpGet("https://github.com/cxnker/v/raw/main/main/vfly"))()
	end
})

ScriptsTab:Button({
    Title = "Telekinesis",
	Desc = "GAME: Universal Script üìå, TYPE: Tool",
    Callback = function()
        loadstring(game:HttpGet("https://github.com/cxnker/v/raw/main/main/telekinesis"))()
	end
})

-- ==============================
-- ADMIN
-- ==============================

AdminTab:Section({Title = "Admin", Icon = "crown"})

AdminTab:Button({
    Title = "Admin Sword",
    Desc = "TYPE: Tool",
	Callback = function()        
        local buggedPlayers = {}
        local bugConnections = {}
        local Remote = RE:FindFirstChild("1Gu1n")
        
        local tool = Instance.new("Tool")
        tool.Name = "Admin Sword"
        tool.RequiresHandle = true
        tool.CanBeDropped = true
        
        local handle = Instance.new("Part")
        handle.Name = "Handle"
        handle.Size = Vector3.new(0.1, 0.1, 0.1)
        handle.Massless = true
        handle.Anchored = false
        handle.CanCollide = false
        handle.Transparency = 0.5
        handle.Color = Color3.fromRGB(255, 0, 0)
        local mesh = Instance.new("SpecialMesh", handle)
        mesh.MeshType = Enum.MeshType.Sphere
        mesh.Scale = Vector3.new(0.05, 0.05, 0.05)
        handle.Parent = tool
        
        local function bugPlayer(targetPlayer)
            if not Remote then
                newNotification("‚ö†Ô∏è Warn", "Remote not found")
                return
            end
            
            if not targetPlayer or not targetPlayer.Character then
                newNotification("‚ö†Ô∏è Warn", "Invalid player")
                return
            end
            
            local playerName = targetPlayer.Name
            
            if buggedPlayers[playerName] then
                if bugConnections[playerName] then
                    bugConnections[playerName]:Disconnect()
                    bugConnections[playerName] = nil
                end
                buggedPlayers[playerName] = nil
                newNotification("üîì Unapplied Bug", playerName .. " debugged player")
                return
            end
            
            buggedPlayers[playerName] = true
            newNotification("üî® Bug Applied", playerName .. " was bugged")
            
            bugConnections[playerName] = RunService.Stepped:Connect(function()
                local target = Players:FindFirstChild(playerName)
                if not target or not target.Character or not target.Character:FindFirstChild("HumanoidRootPart") then
                    if bugConnections[playerName] then
                        bugConnections[playerName]:Disconnect()
                        bugConnections[playerName] = nil
                    end
                    buggedPlayers[playerName] = nil
                    return
                end
        
                local crazyVector = Vector3.new(
                    math.random(1e25, 1e25),
                    math.random(1e25, 1e25),
                    math.random(1e25, 1e25)
                )
        
                local args = {
                    [1] = target.Character.HumanoidRootPart,
                    [2] = target.Character.HumanoidRootPart,
                    [3] = crazyVector,
                    [4] = target.Character.HumanoidRootPart.Position,
                    [5] = LocalPlayer.Backpack:FindFirstChild("Assault") and LocalPlayer.Backpack.Assault.GunScript_Local:FindFirstChild("MuzzleEffect"),
                    [6] = LocalPlayer.Backpack:FindFirstChild("Assault") and LocalPlayer.Backpack.Assault.GunScript_Local:FindFirstChild("HitEffect"),
                    [7] = 3000,
                    [8] = 3000,
                    [9] = { [1] = false },
                    [10] = {
                        [1] = 10000,
                        [2] = Vector3.new(3000, 3000, 3000),
                        [3] = BrickColor.new(29),
                        [4] = 0.05,
                        [5] = Enum.Material.SmoothPlastic,
                        [6] = 0.05
                    },
                    [11] = true,
                    [12] = false
                }
        
                Remote:FireServer(unpack(args))
            end)
        end
        
        local function getPlayerFromMouse(mouse)
            local target = mouse.Target
            if not target then return nil end
            local character = target.Parent
            while character and not character:FindFirstChild("Humanoid") do
                character = character.Parent
            end
            if character and character:FindFirstChild("Humanoid") then
                return Players:GetPlayerFromCharacter(character)
            end
            return nil
        end
        
        tool.Equipped:Connect(function(mouse)
            local character = tool.Parent
            if character and character:FindFirstChild("Humanoid") and character.Humanoid.RigType == Enum.HumanoidRigType.R15 then
        
            ReplicatedStorage:WaitForChild("Remotes"):WaitForChild("Wear"):InvokeServer(12928981934) -- Tool Model
        
                mouse.Button1Down:Connect(function()
                    local humanoid = character:FindFirstChildOfClass("Humanoid")
                    local animator = humanoid and humanoid:FindFirstChildOfClass("Animator")
                    if animator then
                        local anim = Instance.new("Animation")
                        anim.AnimationId = "rbxassetid://2410679501"
                        local track = animator:LoadAnimation(anim)
                        track:Play()
                    end
                    
                    local targetPlayer = getPlayerFromMouse(mouse)
                    if targetPlayer and targetPlayer ~= LocalPlayer then
                        bugPlayer(targetPlayer)
                    else
                        newNotification("‚ö†Ô∏è Warn", "Click on a player to apply/remove bug")
                    end
                end)
                
                newNotification("üì§ Admin Sword equipped", "Click on a player to apply/remove bug")
            end
        end)
        
        tool.Unequipped:Connect(function()
            ReplicatedStorage:WaitForChild("Remotes"):WaitForChild("Wear"):InvokeServer(12928981934) -- Tool Model
            newNotification("‚Äãüì• ‚ÄãAdmin Sword saved", "Unequipped tool")
        end)
        
        Players.PlayerRemoving:Connect(function(player)
            local playerName = player.Name
            if bugConnections[playerName] then
                bugConnections[playerName]:Disconnect()
                bugConnections[playerName] = nil
            end
            buggedPlayers[playerName] = nil
        end)
        
        LocalPlayer.Chatted:Connect(function(message)
            if message:lower() == "/stopallbugs" then
                for _, connection in pairs(bugConnections) do
                    if connection then connection:Disconnect() end
                end
                bugConnections = {}
                buggedPlayers = {}
                newNotification("üõë All bugs removed", "All players were debugged")
            elseif message:lower() == "/buggedlist" then
                local count = 0
                for _ in pairs(buggedPlayers) do count = count + 1 end
                newNotification("üìã Player list", count > 0 and (count.." players bugged") or "No bugged players were found")
            end
        end)
        
        tool.Parent = LocalPlayer.Backpack
        newNotification("‚úÖ Admin Sword enable", "Added tool, Use /stopallbugs to stop all bugs, and /buggedlist for view listed players")
    end
})

AdminTab:Button({
    Title = "Fling Ball",
    Desc = "TYPE: Tool",
    Callback = function()
local toolName = "Fling Ball"
local toolEquipped = false

local pInv = LocalPlayer:WaitForChild("Backpack")

if not pInv:FindFirstChild(toolName) then
    local tool = Instance.new("Tool")
    tool.Name = toolName
    tool.RequiresHandle = true
    tool.CanBeDropped = false

    local handle = Instance.new("Part")
    handle.Name = "Handle"
    handle.Size = Vector3.new(1, 1, 1)
    handle.Transparency = 1
    handle.Parent = tool

    local decal = Instance.new("Decal")
    decal.Texture = "rbxassetid://775552544"
    decal.Face = Enum.NormalId.Front
    decal.Parent = handle

    tool.Equipped:Connect(function()
		newNotification("‚úÖ Fling Ball enable", "Added tool, Click on a player to fling")
        toolEquipped = true
    end)

    tool.Unequipped:Connect(function()
        toolEquipped = false
    end)

    tool.Parent = pInv
end

local function FlingBall(target)
    local player = Players.LocalPlayer
    local character = player.Character or player.CharacterAdded:Wait()
    local humanoid = character:WaitForChild("Humanoid")
    local hrp = character:WaitForChild("HumanoidRootPart")
    local backpack = player:WaitForChild("Backpack")
    local ServerBalls = Workspace:WaitForChild("WorkspaceCom"):WaitForChild("001_SoccerBalls")

    local function GetBall()
        if not backpack:FindFirstChild("SoccerBall") and not character:FindFirstChild("SoccerBall") then
            ReplicatedStorage.RE:FindFirstChild("1Too1l"):InvokeServer("PickingTools", "SoccerBall")
        end
        repeat task.wait() until backpack:FindFirstChild("SoccerBall") or character:FindFirstChild("SoccerBall")
        local ballTool = backpack:FindFirstChild("SoccerBall")
        if ballTool then ballTool.Parent = character end
        repeat task.wait() until ServerBalls:FindFirstChild("Soccer" .. player.Name)
        return ServerBalls:FindFirstChild("Soccer" .. player.Name)
    end

    local Ball = ServerBalls:FindFirstChild("Soccer" .. player.Name) or GetBall()
    Ball.CanCollide = false
    Ball.Massless = true
    Ball.Transparency = 1
    Ball.CustomPhysicalProperties = PhysicalProperties.new(0.0001, 0, 0)

    if target ~= player then
        local tchar = target.Character
        if tchar and tchar:FindFirstChild("HumanoidRootPart") and tchar:FindFirstChild("Humanoid") then
            local troot = tchar.HumanoidRootPart
            local thum = tchar.Humanoid
            if Ball:FindFirstChildWhichIsA("BodyVelocity") then
                Ball:FindFirstChildWhichIsA("BodyVelocity"):Destroy()
            end
            local bv = Instance.new("BodyVelocity")
            bv.Name = "FlingPower"
            bv.Velocity = Vector3.new(9e8, 9e8, 9e8)
            bv.MaxForce = Vector3.new(math.huge, math.huge, math.huge)
            bv.P = 9e900
            bv.Parent = Ball
            Workspace.CurrentCamera.CameraSubject = thum

            repeat
                if troot.Velocity.Magnitude > 0 then
                    local pos = troot.Position + (troot.Velocity / 1.5)
                    Ball.CFrame = CFrame.new(pos)
                    Ball.Orientation += Vector3.new(45, 60, 30)
                else
                    for _, v in pairs(tchar:GetChildren()) do
                        if v:IsA("BasePart") and v.CanCollide and not v.Anchored then
                            Ball.CFrame = v.CFrame
                            task.wait(1/6000)
                        end
                    end
                end
                task.wait(1/6000)
            until troot.Velocity.Magnitude > 1000 or thum.Health <= 0 or not tchar:IsDescendantOf(Workspace) or target.Parent ~= Players

            Workspace.CurrentCamera.CameraSubject = humanoid
        end
    end
end

UIS.TouchTap:Connect(function(position, processed)
    if not toolEquipped or processed then return end
    local pos = position[1]
    local point = Workspace.CurrentCamera:ScreenPointToRay(pos.X, pos.Y)
    local hit = Workspace:Raycast(point.Origin, point.Direction * 1000)
    if hit and hit.Instance then
        local model = hit.Instance:FindFirstAncestorOfClass("Model")
        local plr = Players:GetPlayerFromCharacter(model)
        if plr and plr ~= LocalPlayer then
            FlingBall(plr)
        end
    end
end)
    end
})

AdminTab:Button({
    Title = "Kill Couch",
    Desc = "TYPE: Tool",
	Callback = function()
local toolName = "Kill Couch"
local toolEquipped = false
local aimName = nil
local loopTP = nil
local couchEquipped = false
local base = nil
local posStart = nil
local posEnd = nil

-- Add Tool
local pInv = LocalPlayer:WaitForChild("Backpack")
if not pInv:FindFirstChild(toolName) then
	local tool = Instance.new("Tool")
	tool.Name = toolName
	tool.RequiresHandle = false
	tool.CanBeDropped = false

	tool.Equipped:Connect(function()
		newNotification("‚úÖ Kill Couch enable", "Added tool, Click on a player to kill")
		toolEquipped = true
	end)

	tool.Unequipped:Connect(function()
		toolEquipped = false
		aimName = nil
		quitCouch()
	end)

	tool.Parent = pInv
end

-- Quit Couch
function quitCouch()
	if loopTP then
		loopTP:Disconnect()
		loopTP = nil
	end

	if couchEquipped then
		local phole = LocalPlayer.Character
		if phole then
			local couch = phole:FindFirstChild("Couch")
			if couch then
				couch.Parent = LocalPlayer.Backpack
				couchEquipped = false
			end
		end
	end

	if base then
		base:Destroy()
		base = nil
	end

	if getgenv().AntiSit then
		getgenv().AntiSit:Set(false)
	end

	local phum = LocalPlayer.Character and LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
	if phum then
		phum:SetStateEnabled(Enum.HumanoidStateType.Physics, true)
		phum:ChangeState(Enum.HumanoidStateType.GettingUp)
	end

	if posStart and posEnd then
		posEnd.CFrame = posStart
		posStart = nil
	end
end

-- Get Couch
function getCouch()
	local phole = LocalPlayer.Character
	if not phole then return end
	local pInv = LocalPlayer.Backpack

	if not pInv:FindFirstChild("Couch") and not phole:FindFirstChild("Couch") then
		local args = { "PickingTools", "Couch" }
		ReplicatedStorage.RE["1Too1l"]:InvokeServer(unpack(args))
		task.wait(0.1)
	end

	local couch = pInv:FindFirstChild("Couch") or phole:FindFirstChild("Couch")
	if couch then
		couch.Parent = phole
		couchEquipped = true
	end
end

-- Kill Position
function posKill(phole)
	local rp = phole:FindFirstChild("HumanoidRootPart")
	if not rp then return Vector3.new() end
	local offset = Vector3.new(math.random(-2, 2), -5.1, math.random(-2, 2))
	return rp.Position + offset
end

-- TP Kill Position
function tpPos(aim)
	if not aim or not aim.Character or not aim.Character:FindFirstChild("HumanoidRootPart") then return end

	local mhole = LocalPlayer.Character
	local hEnd = mhole and mhole:FindFirstChild("HumanoidRootPart")
	local phum = mhole and mhole:FindFirstChildOfClass("Humanoid")

	if not hEnd or not phum then return end

	phum:SetStateEnabled(Enum.HumanoidStateType.Physics, false)

	if not base then
		base = Instance.new("Part")
		base.Size = Vector3.new(10, 1, 10)
		base.Anchored = true
		base.CanCollide = true
		base.Transparency = 0.5
		base.Parent = Workspace
    end
    
    -- Destiny
	local des = posKill(aim.Character)
	base.Position = des
	hEnd.CFrame = CFrame.new(des)

	phum:SetStateEnabled(Enum.HumanoidStateType.Physics, true)
end

-- Throw With Couch
function throwCouch(aim)
	if not aim then return end
	aimName = aim.Name
	local phole = LocalPlayer.Character
	if not phole then return end

	posStart = phole:FindFirstChild("HumanoidRootPart") and phole.HumanoidRootPart.CFrame
	posEnd = phole:FindFirstChild("HumanoidRootPart")
	getCouch()

	loopTP = RunService.Heartbeat:Connect(function()
		local cAim = Players:FindFirstChild(aimName)
		if not cAim or not cAim.Character or not cAim.Character:FindFirstChild("Humanoid") then
			quitCouch()
			return
		end
		if getgenv().AntiSit then
			getgenv().AntiSit:Set(true)
		end
		tpPos(cAim)
	end)

	task.spawn(function()
		local cAim = Players:FindFirstChild(aimName)
		while cAim and cAim.Character and cAim.Character:FindFirstChild("Humanoid") do
			task.wait(0.05)
			if cAim.Character.Humanoid.SeatPart then
				local hole = CFrame.new(265.46, -450.83, -59.93)
				cAim.Character.HumanoidRootPart.CFrame = hole
				LocalPlayer.Character.HumanoidRootPart.CFrame = hole
				task.wait(0.4)
				quitCouch()
				task.wait(0.2)
				if posStart then
					LocalPlayer.Character.HumanoidRootPart.CFrame = posStart
				end
				break
			end
		end
	end)
end

-- Process Position
UIS.TouchTap:Connect(function(position, processed)
	if not toolEquipped or processed then return end
	local pos = position[1]
	local point = Workspace.CurrentCamera:ScreenPointToRay(pos.X, pos.Y)
	local hit = Workspace:Raycast(point.Origin, point.Direction * 1000)
	if hit and hit.Instance then
		local model = hit.Instance:FindFirstAncestorOfClass("Model")
		local plr = Players:GetPlayerFromCharacter(model)
		if plr and plr ~= LocalPlayer then
			throwCouch(plr)
		end
	end
end)
    end
})

AdminTab:Button({
    Title = "Destroy Server",
	Callback = function()   
        local ClearEvent = RE:FindFirstChild("1Clea1rTool1s")
        local ToolEvent = RE:FindFirstChild("1Too1l")
        local FireEvent = RE:FindFirstChild("1Gu1n")

        local function clearAllTools()
            if ClearEvent then
                ClearEvent:FireServer("ClearAllTools")
            end
        end
        local function getAssault()
            if ToolEvent then
                ToolEvent:InvokeServer("PickingTools", "Assault")
            end
        end
        local function hasAssault()
            return LocalPlayer.Backpack:FindFirstChild("Assault") ~= nil
        end
        local function fireAtPart(targetPart)
            local gunScript = LocalPlayer.Backpack:FindFirstChild("Assault")
                and LocalPlayer.Backpack.Assault:FindFirstChild("GunScript_Local")
            if not gunScript or not targetPart then return end
            local args = {
                targetPart,
                targetPart,
                Vector3.new(9e16, 9e16, 9e16),
                targetPart.Position,
                gunScript:FindFirstChild("MuzzleEffect"),
                gunScript:FindFirstChild("HitEffect"),
                0,
                0,
                { false },
                {
                    25,
                    Vector3.new(1000, 1000, 1000),
                    BrickColor.new(29),
                    0.25,
                    Enum.Material.SmoothPlastic,
                    0.25
                },
                true,
                false
            }
            FireEvent:FireServer(unpack(args))
        end
        local function fireAtAllPlayers(times)
            for i = 1, times do
                for _, player in ipairs(Players:GetPlayers()) do
                    if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
                        fireAtPart(player.Character.HumanoidRootPart)
                        task.wait(0.1)
                    end
                end
            end
        end
        task.spawn(function()
            while true do
                clearAllTools()
                getAssault()
                repeat
                    task.wait(0.2)
                until hasAssault()
                fireAtAllPlayers(3)
                task.wait(1)
            end
        end)
		newNotification("‚úÖ Success", "Server successfully destroyed")
    end
})

-- ==============================
-- TELEPORTS
-- ==============================

TeleportTab:Section({Title = "Teleports", Icon = "pin"})

local sites = {
    {"Hill", CFrame.new(-348.64, 65.94, -458.08)},
    {"Start", CFrame.new(-26.17, 3.48, -0.93)},
    {"Hotel", CFrame.new(159.10, 3.32, 164.97)},
    {"Beach", CFrame.new(55.69, 2.94, -1403.60)},
    {"Beach2", CFrame.new(42.39, 2.94, 1336.14)},
    {"Farm", CFrame.new(-766.41, 2.92, -61.10)}
}

for _, tp in pairs(sites) do
    TeleportTab:Button({
        Title = tp[1],
        Callback = function()
            RootPart.CFrame = tp[2]
        end
    })
end

-- ==============================
-- PROTECTION
-- ==============================

ProtectionTab:Section({Title = "Protection", Icon = "shield"})






